<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_421367_skill_se_submission</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_421367_skill_se_submission">state=2^EQ<item display_value="Submitted" endquery="false" field="state" goto="false" newquery="false" operator="=" or="false" value="2"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Set Level</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    //Query to all level records with min_socre <= this submission score
	
	var sumRecord = new GlideRecord('x_421367_skill_se_skill_assessment');
    sumRecord.addQuery('submission', current.sys_id);
    sumRecord.query();
	
	// Create a temp variable to store sum value 
    var count = 0;
    while (sumRecord.next()) {
		// Sum the value of proficiency_level field for each record in loop
        count += parseInt(sumRecord.getValue('proficiency_level'));
    }
	
	// Find GlideRecord object for a submission reference field.
	current.score = count;
	
	var levelRecord = new GlideRecord('x_421367_skill_se_level');
    levelRecord.addQuery('min_score', '<=', current.score);

    //Order by descending then get first record (highest min score near submission score); 
    levelRecord.orderByDesc('min_score');
    levelRecord.setLimit(1);
    levelRecord.query();

    if (levelRecord.next()) {
        current.level = levelRecord.sys_id;
    }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-12-03 15:15:13</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>eecc917cdba940107bbffe1b689619c8</sys_id>
        <sys_mod_count>18</sys_mod_count>
        <sys_name>Set Level</sys_name>
        <sys_overrides/>
        <sys_package display_value="Skill Evaluation" source="x_421367_skill_se">f2ed66acdbed00107bbffe1b689619dd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Skill Evaluation">f2ed66acdbed00107bbffe1b689619dd</sys_scope>
        <sys_update_name>sys_script_eecc917cdba940107bbffe1b689619c8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-12-04 16:22:21</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=eecc917cdba940107bbffe1b689619c8"/>
</record_update>
